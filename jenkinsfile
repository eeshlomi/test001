pipeline {
	agent any
	stages {
		stage('test') {
			options { retry(2) }
			steps {
				sleep(time:1,unit:"SECONDS")
				echo "Commit hash is ${GIT_COMMIT}"
				sh '''#!/bin/bash
					[ "${GIT_BRANCH}" = "origin/master" ] && exit 0
					RETVAL=`git rev-list --left-right --count origin/master... | awk '{print $1}'`
					[ "${RETVAL}" != "0" ] && \
						echo master is ahead && \
						echo merge from master
					exit $RETVAL
				'''
			}
		}
		stage('merge-to-master') {
			when { expression { GIT_BRANCH != "origin/master" } }
			steps {
				echo "This is a branch"
			}
		}
	}
}
